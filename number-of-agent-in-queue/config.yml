---
title: Get Number of On-Queue Agents
description: This tutorial walks through the steps of implementing a function to get the number of On-Queue Agents on a specific queue.
categories:
- Routing
steps:
- title: Introduction
  content: |
    This tutorial walks through implementing a function to get the number of On-Queue Agents on a specific queue.

    There are 5 types of Routing Status: IDLE, INTERACTING, COMMUNINCATING, OFF_QUEUE, and NOT_RESPONDING. To determine if an agent is On-Queue, they should have a routing status of either IDLE or INTERACTING.

    Go here for more information about [Presences and Routing Status](/api/rest/v2/presence/understanding_presence.html):

    The Queue Observation Query allows for querying data from queues including the number of on-queue users represented by the *oOnQueueUsers* metric.

    This article provide more information about the [Queue query](https://developer.mypurecloud.com/api/rest/v2/analytics/queue.html).

    For this tutorial, we are going to use the Genesys Cloud SDK.

- title: Authentication
  content: |
    Authenticate with Genesys Cloud using Client Credentials. More information about authentication could be found in the [Authorization Documentation](/api/rest/authorization/)

- title: Create API instances
  content: |
    Create an instance of the Routing API and the Analytics API.

    Routing API will be used in identifying the queue based on its name.

    Analytics API will be used in querying the data and getting how many agents are currently on-queue.

- title: Create the function
  content: |
    First, search for the queue using its name.

    The next step is to build the Queue Observation Query.

    The number of users will simply be returned from the function.

languages: 
  python:
    displayName: Python
    steps:
    - file: "python/script.py"
      highlight: "0-84"
    - file: "python/script.py"
      highlight: "9-20"
    - file: "python/script.py"
      highlight: "22-24"
    - file: "python/script.py"
      highlight: "27-74"
  nodejs:
    displayName: NodeJS
    steps:
    - file: "nodejs/index.js"
      highlight: "1-115"
    - file: "nodejs/index.js"
      highlight: "94-98"
    - file: "nodejs/index.js"
      highlight: "13-15"
    - file: "nodejs/index.js"
      highlight: "43-92"
